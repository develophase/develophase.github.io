{"version":3,"sources":["assets/bg.png","api/apicalls.js","screens/login/Login.js"],"names":["module","exports","__webpack_require__","p","ACCOUNT_URL","apikey","getAccountsByParams","offset","limit","where","concat","require","Login","Component","constructor","props","super","this","state","phoneNumber","password","messageErrorPassword","messageErrorUsername","passwordTextType","showEyeSlashPasswordIcon","loading","activePage","total","loadingData","tableData","handlePhoneNumber","e","values","target","value","setState","test","handlePassword","onHandleSubmit","preventDefault","validate","username","header","accept","Content-Type","xc-token","query","url","axios","method","headers","then","data","token","list","length","alert","localStorage","setItem","Id","Name","Role","Username","history","push","catch","err","valid","showPassword","render","getItem","React","createElement","className","Container","Row","Col","md","CardGroup","Card","CardBody","Form","onSubmit","InputGroup","InputGroupText","Input","type","required","onChange","placeholder","autoComplete","color","Button","onClick","xs","Spinner","size","body","style","width","backgroundColor","CardImg","src","Logo","alt","padding"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mMCAxC,MAEMC,EAAc,+DAIPC,EAAS,2CAOTC,EAAsBA,CAACC,EAAQC,EAAOC,IACjD,GAAAC,OAAUN,EAAW,YAAAM,OAAWH,EAAM,WAAAG,OAAUF,EAAK,WAAAE,OAAUD,gCCRlDE,EAAQ,IAiMRC,UA/Lf,cAAoBC,YAgBlBC,YAAYC,GACVC,MAAMD,GAAOE,KAffC,MAAQ,CACNC,YAAa,GACbC,SAAU,GACVC,qBAAsB,GACtBC,qBAAsB,GACtBC,iBAAkB,WAClBC,0BAA0B,EAC1BC,SAAS,EACTC,WAAY,EACZC,MAAO,EACPC,aAAa,EACbC,UAAW,IACZZ,KAMDa,kBAAqBC,KAInB,IAAIC,EAASD,EAAEE,OAAOC,MAEP,KAAXF,GACFf,KAAKkB,SAAS,CACZb,qBAAsB,KANhB,yBAUFc,KAAKJ,IACXf,KAAKkB,SAAS,CACZhB,YAAaY,EAAEE,OAAOC,UAG3BjB,KAEDoB,eAAkBN,KAEO,KADFA,EAAEE,OAAOC,OAE5BjB,KAAKkB,SAAS,CACZd,qBAAsB,KAG1BJ,KAAKkB,SAAS,CACZf,SAAUW,EAAEE,OAAOC,UAEtBjB,KAEDqB,eAAiBP,KAIf,GAFAA,EAAEQ,iBAEGtB,KAAKuB,WAAV,CAIAvB,KAAKkB,SAAS,CAAEV,SAAS,IACzB,IAAIgB,EAAWxB,KAAKC,MAAMC,YACtBC,EAAWH,KAAKC,MAAME,SAC1B,GAAkB,OAAbqB,GAAkC,KAAbA,GAAkC,OAAbrB,GAAkC,KAAbA,EAAkB,CACpF,MAAMsB,EAAS,CACbC,OAAQ,mBACRC,eAAgB,mBAChBC,WAAYxC,GAGRyC,EAAK,aAAApC,OAAgB+B,EAAQ,sBAAA/B,OAAqBU,EAAQ,KAC1D2B,EAAMzC,EAAoB,EAAG,EAAGwC,GAEtCE,YAAM,CAAEC,OAAQ,MAAOF,IAAKA,EAAKG,QAASR,IAAUS,KAAKC,IACvD,IAAIC,EAAQD,EAAKA,KAAKE,KACtBrC,KAAKkB,SAAS,CAAEV,SAAS,IAEL,GAAhB4B,EAAME,OACRC,MAAM,4DAGNC,aAAaC,QAAQ,KAAML,EAAM,GAAGM,IACpCF,aAAaC,QAAQ,OAAQL,EAAM,GAAGO,MACtCH,aAAaC,QAAQ,OAAQL,EAAM,GAAGQ,MACtCJ,aAAaC,QAAQ,WAAYL,EAAM,GAAGS,UAC1C7C,KAAKF,MAAMgD,QAAQC,KAAK,QAGzBC,MAAMC,IAEPjD,KAAKkB,SAAS,CAAEV,SAAS,IACzB+B,MAAM,gDAGXvC,KAEDuB,SAAW,MACT,IAAI2B,GAAQ,EACZ,IAAI1B,EAAWxB,KAAKC,MAAMC,YACtBC,EAAWH,KAAKC,MAAME,SAgB1B,OAdiB,OAAbqB,GAAkC,KAAbA,IACvBxB,KAAKkB,SAAS,CACZb,qBAAsB,gCAExB6C,GAAQ,GAGO,OAAb/C,GAAkC,KAAbA,IACvBH,KAAKkB,SAAS,CACZd,qBAAsB,gCAExB8C,GAAQ,GAGHA,IACRlD,KAEDmD,aAAe,MACuB,aAAhCnD,KAAKC,MAAMK,iBACbN,KAAKkB,SAAS,CACZZ,iBAAkB,OAClBC,0BAA0B,IAG5BP,KAAKkB,SAAS,CACZZ,iBAAkB,WAClBC,0BAA0B,MAKhC6C,SAQE,OAJa,MAFDZ,aAAaa,QAAQ,UAG/BrD,KAAKF,MAAMgD,QAAQC,KAAK,KAIxBO,IAAAC,cAAA,OAAKC,UAAU,mCACbF,IAAAC,cAACE,IAAS,KACRH,IAAAC,cAACG,IAAG,CAACF,UAAU,0BACbF,IAAAC,cAACI,IAAG,CAACC,GAAG,KACNN,IAAAC,cAACM,IAAS,KACRP,IAAAC,cAACO,IAAI,CAACN,UAAU,OACdF,IAAAC,cAACQ,IAAQ,KACPT,IAAAC,cAACS,IAAI,CAACC,SAAUjE,KAAKqB,gBACnBiC,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,KAAGC,UAAU,cAAa,2BAC1BF,IAAAC,cAACW,IAAU,CAACV,UAAU,QACpBF,IAAAC,cAACY,IAAc,KACbb,IAAAC,cAAA,KAAGC,UAAU,eAEfF,IAAAC,cAACa,IAAK,CAACC,KAAK,OAAOC,UAAQ,EAACC,SAAUvE,KAAKa,kBAAmB2D,YAAY,eAAeC,aAAa,kBAExGnB,IAAAC,cAAA,QAAMmB,MAAM,OAAO1E,KAAKC,MAAMI,sBAC9BiD,IAAAC,cAACW,IAAU,CAACV,UAAU,QACpBF,IAAAC,cAACY,IAAc,KACbb,IAAAC,cAAA,KAAGC,UAAU,eAEfF,IAAAC,cAACa,IAAK,CAACC,KAAMrE,KAAKC,MAAMK,iBAAkBkD,UAAU,wBAAwBe,SAAUvE,KAAKoB,eAAgBoD,YAAY,WAAWC,aAAa,qBAC7InB,IAAAC,cAACoB,IAAM,CAACnB,UAAU,wDAAwDoB,QAAS5E,KAAKmD,cACtFG,IAAAC,cAAA,KAAGC,UAAS,MAAA/D,OAAQO,KAAKC,MAAMM,yBAA2B,eAAiB,cAGjF+C,IAAAC,cAAA,QAAMmB,MAAM,OAAO1E,KAAKC,MAAMG,sBAC9BkD,IAAAC,cAACG,IAAG,KACFJ,IAAAC,cAACI,IAAG,CAACkB,GAAG,KACL7E,KAAKC,MAAMO,QACV8C,IAAAC,cAAA,YAAMD,IAAAC,cAACuB,IAAO,CAACC,KAAK,KAAKL,MAAM,YAAY,kBAE3CpB,IAAAC,cAACoB,IAAM,CAACN,KAAK,SAASK,MAAM,UAAUlB,UAAU,QAAO,cAOnEF,IAAAC,cAACO,IAAI,CAACkB,MAAI,EAACxB,UAAU,yBAAyByB,MAAO,CAAEC,MAAO,MAAOC,gBAAiB,YACpF7B,IAAAC,cAAC6B,IAAO,CAACC,IAAKC,IAAMC,IAAI,OAAON,MAAO,CAAEO,QAAS","file":"static/js/8.ba7b26b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2fd106bd.png\";","const BASE_URL = 'https://app.nocodb.com/api/v1/db/data/noco';\r\nconst EVENT_URL = 'https://app.nocodb.com/api/v2/tables/mwu56sppizrkiya/records';\r\nconst ACCOUNT_URL = 'https://app.nocodb.com/api/v2/tables/m7vm0tg07gje478/records';\r\nconst RESERVATION_URL = 'https://app.nocodb.com/api/v2/tables/m9yuay09dgnkd2i/records';\r\nconst ANNOUNCEMENT_URL = 'https://app.nocodb.com/api/v2/tables/mtrg0ths6noz89o/records'; \r\n\r\nexport const apikey = '2LDRJE3zbiKS_05EZ5as85ZghFLMWOrdBrU_kNDo';\r\nexport const nearbyEvents = (offset, limit, where) => {\r\n  return `${BASE_URL}/p9nchx72w7ehalc/mwu56sppizrkiya/views/vwr2ue4nanhwft71?offset=${offset}&limit=${limit}&where=${where}`;\r\n}\r\nexport const eventDetails = (id) => {\r\n  return `${EVENT_URL}/${id}`;\r\n}\r\nexport const getAccountsByParams = (offset, limit, where) => {\r\n  return `${ACCOUNT_URL}?offset=${offset}&limit=${limit}&where=${where}`;\r\n}\r\nexport const bookedSeatByEventIds = (offset, limit, where) => {\r\n  return `${RESERVATION_URL}?offset=${offset}&limit=${limit}&where=${where}`;\r\n} \r\nexport const createBookedSeat = () => {\r\n  return `${RESERVATION_URL}`;\r\n}\r\nexport const getEventTicketBookedByUser = (offset, limit, where) => {\r\n  return `${RESERVATION_URL}?offset=${offset}&limit=${limit}&where=${where}`;\r\n}\r\nexport const registerUser = () => {\r\n  return `${ACCOUNT_URL}`;\r\n}\r\nexport const latestAnnoucement = (offset, limit, sort) => {\r\n  return `${ANNOUNCEMENT_URL}?offset=${offset}&limit=${limit}&sort=${sort}`;\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button, Card, CardBody, CardGroup, Spinner, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row, CardImg, CardText } from 'reactstrap';\r\nimport { apikey, getAccountsByParams } from '../../api/apicalls'\r\nimport Logo from '../../assets/bg.png'\r\nimport axios from 'axios'\r\n\r\nconst moment = require('moment');\r\n\r\nclass Login extends Component {\r\n\r\n  state = {  \r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n    messageErrorPassword: \"\",\r\n    messageErrorUsername: \"\",\r\n    passwordTextType: 'password',\r\n    showEyeSlashPasswordIcon: true,\r\n    loading: false,\r\n    activePage: 1,\r\n    total: 0,\r\n    loadingData: false,\r\n    tableData: [],\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  handlePhoneNumber = (e) => {\r\n\r\n    let reg = /^(0|08|08[0-9]{1,12})$/\r\n\r\n    var values = e.target.value;\r\n\r\n    if (values !== \"\") {\r\n      this.setState({\r\n        messageErrorUsername: ''\r\n      })\r\n    }\r\n\r\n    if (reg.test(values)){\r\n      this.setState({\r\n        phoneNumber: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  handlePassword = (e) => {\r\n    var valuesPassword = e.target.value;\r\n    if (valuesPassword !== \"\") {\r\n      this.setState({\r\n        messageErrorPassword: ''\r\n      })\r\n    }\r\n    this.setState({\r\n      password: e.target.value\r\n    })\r\n  }\r\n\r\n  onHandleSubmit = e => {\r\n\r\n    e.preventDefault();\r\n\r\n    if (!this.validate()) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ loading: true })\r\n    var username = this.state.phoneNumber;\r\n    var password = this.state.password;\r\n    if ((username !== null && username !== \"\") && (password !== null && password !== \"\")) {\r\n      const header = {\r\n        accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'xc-token': apikey\r\n      };\r\n\r\n      const query = `(Phone,eq,${username})~and(Password,eq,${password})`;\r\n      const url = getAccountsByParams(0, 1, query);\r\n\r\n      axios({ method: 'get', url: url, headers: header }).then(data => {\r\n        var token = data.data.list;\r\n        this.setState({ loading: false })\r\n\r\n        if (token.length == 0) {\r\n          alert(\"User tidak ditemukan, mohon cek nomor dan password anda\");\r\n        }\r\n        else {\r\n          localStorage.setItem(\"Id\", token[0].Id);\r\n          localStorage.setItem(\"Name\", token[0].Name);\r\n          localStorage.setItem(\"Role\", token[0].Role);\r\n          localStorage.setItem(\"Username\", token[0].Username);\r\n          this.props.history.push('/')\r\n        }\r\n\r\n      }).catch(err => {\r\n\r\n        this.setState({ loading: false })\r\n        alert(\"username atau password tidak ditemukan\")\r\n      });\r\n    }\r\n  }\r\n\r\n  validate = () => {\r\n    let valid = true;\r\n    var username = this.state.phoneNumber;\r\n    var password = this.state.password;\r\n\r\n    if (username === null || username === \"\") {\r\n      this.setState({\r\n        messageErrorUsername: 'Username Tidak Boleh Kosong'\r\n      })\r\n      valid = false\r\n    }\r\n\r\n    if (password === null || password === \"\") {\r\n      this.setState({\r\n        messageErrorPassword: 'Password tidak boleh kosong'\r\n      })\r\n      valid = false\r\n    }\r\n\r\n    return valid\r\n  }\r\n\r\n  showPassword = () => {\r\n    if (this.state.passwordTextType === 'password') {\r\n      this.setState({\r\n        passwordTextType: 'text',\r\n        showEyeSlashPasswordIcon: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        passwordTextType: 'password',\r\n        showEyeSlashPasswordIcon: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    var token = localStorage.getItem(\"token\");\r\n\r\n    if (token != null) {\r\n      this.props.history.push('/')\r\n    }\r\n\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"8\">\r\n              <CardGroup>\r\n                <Card className=\"p-4\">\r\n                  <CardBody>\r\n                    <Form onSubmit={this.onHandleSubmit}> \r\n                      <h1>Login</h1>\r\n                      <p className=\"text-muted\">Sign In to your account</p>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroupText>\r\n                          <i className=\"icon-user\"></i>\r\n                        </InputGroupText>\r\n                        <Input type=\"text\" required onChange={this.handlePhoneNumber} placeholder=\"Phone Number\" autoComplete=\"Phone Number\" />\r\n                      </InputGroup>\r\n                      <font color=\"red\">{this.state.messageErrorUsername}</font>\r\n                      <InputGroup className=\"mb-4\">\r\n                        <InputGroupText>\r\n                          <i className=\"icon-lock\"></i>\r\n                        </InputGroupText>\r\n                        <Input type={this.state.passwordTextType} className='border border-right-0' onChange={this.handlePassword} placeholder=\"Password\" autoComplete=\"current-password\" />\r\n                          <Button className='bg-transparent border border-left-0 solid transparent' onClick={this.showPassword}>\r\n                            <i className={`fa ${this.state.showEyeSlashPasswordIcon ? \"fa-eye-slash\" : \"fa-eye\" }`}></i>\r\n                          </Button>\r\n                      </InputGroup>\r\n                      <font color=\"red\">{this.state.messageErrorPassword}</font>\r\n                      <Row>\r\n                        <Col xs=\"6\">\r\n                          {this.state.loading ? (\r\n                            <span><Spinner size=\"sm\" color=\"primary\" /> Logging in...</span>\r\n                          ) : (\r\n                            <Button type='submit' color=\"primary\" className=\"px-4\">Login</Button>\r\n                          )}\r\n                        </Col>\r\n                      </Row>\r\n                    </Form>\r\n                  </CardBody>\r\n                </Card>\r\n                <Card body className=\"justify-content-center\" style={{ width: '44%', backgroundColor: '#0563B1', }}>\r\n                  <CardImg src={Logo} alt=\"Logo\" style={{ padding: 'auto' }} />\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;"],"sourceRoot":""}